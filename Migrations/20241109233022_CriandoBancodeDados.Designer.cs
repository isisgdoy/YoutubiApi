// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoutubiApi.Data;

#nullable disable

namespace YoutubiApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241109233022_CriandoBancodeDados")]
    partial class CriandoBancodeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YoutubiApi.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriadorId")
                        .HasColumnType("int");

                    b.Property<int>("IdCriador")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("YoutubiApi.Models.Criador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Criadores");
                });

            modelBuilder.Entity("YoutubiApi.Models.ItemPlaylist", b =>
                {
                    b.Property<int>("IdPlaylist")
                        .HasColumnType("int");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdPlaylist", "IdConteudo");

                    b.HasIndex("IdConteudo");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ItemsPlaylists");
                });

            modelBuilder.Entity("YoutubiApi.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UuarioId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("YoutubiApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("YoutubiApi.Models.Conteudo", b =>
                {
                    b.HasOne("YoutubiApi.Models.Criador", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("YoutubiApi.Models.ItemPlaylist", b =>
                {
                    b.HasOne("YoutubiApi.Models.Conteudo", "Conteudo")
                        .WithMany("ItemPlaylist")
                        .HasForeignKey("IdConteudo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoutubiApi.Models.Playlist", "Playlist")
                        .WithMany("ItemPlaylists")
                        .HasForeignKey("IdPlaylist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoutubiApi.Models.Usuario", null)
                        .WithMany("ItemPlaylists")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Conteudo");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("YoutubiApi.Models.Playlist", b =>
                {
                    b.HasOne("YoutubiApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("YoutubiApi.Models.Conteudo", b =>
                {
                    b.Navigation("ItemPlaylist");
                });

            modelBuilder.Entity("YoutubiApi.Models.Playlist", b =>
                {
                    b.Navigation("ItemPlaylists");
                });

            modelBuilder.Entity("YoutubiApi.Models.Usuario", b =>
                {
                    b.Navigation("ItemPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
